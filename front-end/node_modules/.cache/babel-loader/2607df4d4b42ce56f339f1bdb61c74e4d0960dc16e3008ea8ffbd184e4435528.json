{"ast":null,"code":"import _slicedToArray from\"/Users/kobe/Desktop/whoRyou/front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import\"./App.css\";import socket from\"./server\";// socket 들고오기.\nimport InputField from\"./components/InputField/InputField\";// InputField 가져오기\nimport MessageContainer from\"./components/MessageContainer/MessageContainer\";// import { useSelect } from \"@mui/base\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];// 이 코드??\nvar _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),message=_useState4[0],setMessage=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),messageList=_useState6[0],setMessageList=_useState6[1];console.log(\"message List\",messageList);useEffect(function(){socket.on('message',function(message){setMessageList(function(prevState){return prevState.concat(message);});});askUserName();},[]);var askUserName=function askUserName(){var userName=prompt(\"당신의 이름을 입력하세요\");socket.emit(\"login\",userName,function(res){console.log(\"Res\",res);// 지금 앱에서의 로그인은 받은 유저의 정보를 저장하고 소켓 아이디도 저장하는것\nif(res!==null&&res!==void 0&&res.ok){setUser(res.data);}});// 소켓을 사용하여 입력 받은 사용자의 이름을 보낸다., 콜백 함수를 사용하여 response 값을 받아 처리 가능\n};var sendMessage=function sendMessage(event){event.preventDefault();// 웹사이트가 계속 Refesh 되는 것을 막는다.\nsocket.emit(\"sendMessage\",message,function(res){console.log(\"Send Message res\",res);});//emit을 활용하여 메세지를 보낸다.\n};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(MessageContainer,{messageList:messageList,user:user}),/*#__PURE__*/_jsx(InputField,{message:message,setMessage:setMessage,sendMessage:sendMessage})]})});}export default App;","map":{"version":3,"names":["useEffect","useState","socket","InputField","MessageContainer","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","message","setMessage","_useState5","_useState6","messageList","setMessageList","console","log","on","prevState","concat","askUserName","userName","prompt","emit","res","ok","data","sendMessage","event","preventDefault","children","className"],"sources":["/Users/kobe/Desktop/whoRyou/front-end/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport socket from \"./server\"; // socket 들고오기.\nimport InputField from \"./components/InputField/InputField\" // InputField 가져오기\nimport MessageContainer from \"./components/MessageContainer/MessageContainer\";\n// import { useSelect } from \"@mui/base\";\n\nfunction App() {\n\n\tconst [user, setUser] = useState(null); // 이 코드??\n\tconst [message, setMessage] = useState('');\n\tconst [messageList, setMessageList] = useState([]);\n\tconsole.log(\"message List\", messageList);\n\n\tuseEffect(() => {\n\t\tsocket.on('message', (message) => {\n\t\t\tsetMessageList((prevState) => prevState.concat(message));\n\t\t});\n\n\t\taskUserName();\n\t}, []);\n\n  const askUserName=()=>{\n\t\tconst userName = prompt(\"당신의 이름을 입력하세요\");\n\t\t\n\t\tsocket.emit(\"login\", userName, (res) => {\n\t\t\tconsole.log(\"Res\", res)\n\t\t\t// 지금 앱에서의 로그인은 받은 유저의 정보를 저장하고 소켓 아이디도 저장하는것\n\t\t\tif(res?.ok) {\n\t\t\t\tsetUser(res.data);\n\t\t\t}\n\t\t}); // 소켓을 사용하여 입력 받은 사용자의 이름을 보낸다., 콜백 함수를 사용하여 response 값을 받아 처리 가능\n\t};\n\tconst sendMessage = (event) => {\n\t\tevent.preventDefault() // 웹사이트가 계속 Refesh 되는 것을 막는다.\n\t\tsocket.emit(\"sendMessage\", message, (res) => {\n\t\t\tconsole.log(\"Send Message res\", res);\n\t\t}); //emit을 활용하여 메세지를 보낸다.\n\t};\n\n  return (\n    <div>\n      <div className=\"App\">\n\t\t\t\t<MessageContainer messageList={messageList} user={user}/>\n\t\t\t\t<InputField \n\t\t\t\t\tmessage = {message} \n\t\t\t\t\tsetMessage = {setMessage} \n\t\t\t\t\tsendMessage = {sendMessage}\n\t\t\t\t/>\n\t\t\t</div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"2HAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,MAAO,WAAW,CAClB,MAAO,CAAAC,MAAM,KAAM,UAAU,CAAE;AAC/B,MAAO,CAAAC,UAAU,KAAM,oCAAoC,CAAC;AAC5D,MAAO,CAAAC,gBAAgB,KAAM,gDAAgD,CAC7E;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CAEd,IAAAC,SAAA,CAAwBT,QAAQ,CAAC,IAAI,CAAC,CAAAU,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/BG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IAAoB;AACxC,IAAAI,UAAA,CAA8Bd,QAAQ,CAAC,EAAE,CAAC,CAAAe,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAnCE,OAAO,CAAAD,UAAA,IAAEE,UAAU,CAAAF,UAAA,IAC1B,IAAAG,UAAA,CAAsClB,QAAQ,CAAC,EAAE,CAAC,CAAAmB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAA3CE,WAAW,CAAAD,UAAA,IAAEE,cAAc,CAAAF,UAAA,IAClCG,OAAO,CAACC,GAAG,CAAC,cAAc,CAAEH,WAAW,CAAC,CAExCrB,SAAS,CAAC,UAAM,CACfE,MAAM,CAACuB,EAAE,CAAC,SAAS,CAAE,SAACR,OAAO,CAAK,CACjCK,cAAc,CAAC,SAACI,SAAS,QAAK,CAAAA,SAAS,CAACC,MAAM,CAACV,OAAO,CAAC,GAAC,CACzD,CAAC,CAAC,CAEFW,WAAW,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEL,GAAM,CAAAA,WAAW,CAAC,QAAZ,CAAAA,WAAWA,CAAA,CAAK,CACtB,GAAM,CAAAC,QAAQ,CAAGC,MAAM,CAAC,eAAe,CAAC,CAExC5B,MAAM,CAAC6B,IAAI,CAAC,OAAO,CAAEF,QAAQ,CAAE,SAACG,GAAG,CAAK,CACvCT,OAAO,CAACC,GAAG,CAAC,KAAK,CAAEQ,GAAG,CAAC,CACvB;AACA,GAAGA,GAAG,SAAHA,GAAG,WAAHA,GAAG,CAAEC,EAAE,CAAE,CACXnB,OAAO,CAACkB,GAAG,CAACE,IAAI,CAAC,CAClB,CACD,CAAC,CAAC,CAAE;AACL,CAAC,CACD,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIC,KAAK,CAAK,CAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC;AACvBnC,MAAM,CAAC6B,IAAI,CAAC,aAAa,CAAEd,OAAO,CAAE,SAACe,GAAG,CAAK,CAC5CT,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEQ,GAAG,CAAC,CACrC,CAAC,CAAC,CAAE;AACL,CAAC,CAEA,mBACE1B,IAAA,QAAAgC,QAAA,cACE9B,KAAA,QAAK+B,SAAS,CAAC,KAAK,CAAAD,QAAA,eACtBhC,IAAA,CAACF,gBAAgB,EAACiB,WAAW,CAAEA,WAAY,CAACR,IAAI,CAAEA,IAAK,CAAC,CAAC,cACzDP,IAAA,CAACH,UAAU,EACVc,OAAO,CAAIA,OAAQ,CACnBC,UAAU,CAAIA,UAAW,CACzBiB,WAAW,CAAIA,WAAY,CAC3B,CAAC,EACE,CAAC,CACA,CAAC,CAEV,CAEA,cAAe,CAAA1B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}