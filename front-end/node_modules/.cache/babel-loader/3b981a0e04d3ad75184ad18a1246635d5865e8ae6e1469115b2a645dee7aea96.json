{"ast":null,"code":"import _slicedToArray from\"/Users/kobe/Desktop/chatapp-client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import\"./App.css\";import socket from\"./server\";// socket 들고오기.\nimport InputField from\"./components/InputField/InputField\";// InputField 가져오기\n// import { useSelect } from \"@mui/base\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";function App(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];// 이 코드??\nvar _useSelect=useSelect(''),_useSelect2=_slicedToArray(_useSelect,2),message=_useSelect2[0],setMessage=_useSelect2[1];useEffect(function(){askUserName();},[]);var askUserName=function askUserName(){var userName=prompt(\"당신의 이름을 입력하세요\");console.log(\"uuu\",userName);socket.emit(\"login\",userName,function(res){console.log(\"Res\",res);// 지금 앱에서의 로그인은 받은 유저의 정보를 저장하고 소켓 아이디도 저장하는것\nif(res!==null&&res!==void 0&&res.ok){setUser(res.data);}});// 소켓을 사용하여 입력 받은 사용자의 이름을 보낸다., 콜백 함수를 사용하여 response 값을 받아 처리 가능\n};var sendMessage=function sendMessage(){};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(InputField,{message:message,setMessage:setMessage,sendMessage:sendMessage})})});}export default App;","map":{"version":3,"names":["useEffect","useState","socket","InputField","jsx","_jsx","App","_useState","_useState2","_slicedToArray","user","setUser","_useSelect","useSelect","_useSelect2","message","setMessage","askUserName","userName","prompt","console","log","emit","res","ok","data","sendMessage","children","className"],"sources":["/Users/kobe/Desktop/chatapp-client/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport socket from \"./server\"; // socket 들고오기.\nimport InputField from \"./components/InputField/InputField\" // InputField 가져오기\n// import { useSelect } from \"@mui/base\";\n\nfunction App() {\n\n\tconst [user, setUser] = useState(null); // 이 코드??\n\tconst [message, setMessage] = useSelect('');\n\n\tuseEffect(() => {\n\t\taskUserName();\n\t}, []);\n\n  const askUserName=()=>{\n\t\tconst userName = prompt(\"당신의 이름을 입력하세요\");\n\t\tconsole.log(\"uuu\", userName);\n\n\t\t\n\t\tsocket.emit(\"login\", userName, (res) => {\n\t\t\tconsole.log(\"Res\", res)\n\t\t\t// 지금 앱에서의 로그인은 받은 유저의 정보를 저장하고 소켓 아이디도 저장하는것\n\t\t\tif(res?.ok) {\n\t\t\t\tsetUser(res.data);\n\t\t\t}\n\t\t}); // 소켓을 사용하여 입력 받은 사용자의 이름을 보낸다., 콜백 함수를 사용하여 response 값을 받아 처리 가능\n\t};\n\tconst sendMessage = () => {\n\n\t}\n\n  return (\n    <div>\n      <div className=\"App\">\n\t\t\t\t<InputField \n\t\t\t\t\tmessage = {message} \n\t\t\t\t\tsetMessage = {setMessage} \n\t\t\t\t\tsendMessage = {sendMessage}\n\t\t\t\t/>\n\t\t\t</div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"wHAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,MAAO,WAAW,CAClB,MAAO,CAAAC,MAAM,KAAM,UAAU,CAAE;AAC/B,MAAO,CAAAC,UAAU,KAAM,oCAAoC,CAAC;AAC5D;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAEA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CAEd,IAAAC,SAAA,CAAwBN,QAAQ,CAAC,IAAI,CAAC,CAAAO,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/BG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IAAoB;AACxC,IAAAI,UAAA,CAA8BC,SAAS,CAAC,EAAE,CAAC,CAAAC,WAAA,CAAAL,cAAA,CAAAG,UAAA,IAApCG,OAAO,CAAAD,WAAA,IAAEE,UAAU,CAAAF,WAAA,IAE1Bd,SAAS,CAAC,UAAM,CACfiB,WAAW,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEL,GAAM,CAAAA,WAAW,CAAC,QAAZ,CAAAA,WAAWA,CAAA,CAAK,CACtB,GAAM,CAAAC,QAAQ,CAAGC,MAAM,CAAC,eAAe,CAAC,CACxCC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAEH,QAAQ,CAAC,CAG5BhB,MAAM,CAACoB,IAAI,CAAC,OAAO,CAAEJ,QAAQ,CAAE,SAACK,GAAG,CAAK,CACvCH,OAAO,CAACC,GAAG,CAAC,KAAK,CAAEE,GAAG,CAAC,CACvB;AACA,GAAGA,GAAG,SAAHA,GAAG,WAAHA,GAAG,CAAEC,EAAE,CAAE,CACXb,OAAO,CAACY,GAAG,CAACE,IAAI,CAAC,CAClB,CACD,CAAC,CAAC,CAAE;AACL,CAAC,CACD,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAS,CAE1B,CAAC,CAEA,mBACErB,IAAA,QAAAsB,QAAA,cACEtB,IAAA,QAAKuB,SAAS,CAAC,KAAK,CAAAD,QAAA,cACtBtB,IAAA,CAACF,UAAU,EACVY,OAAO,CAAIA,OAAQ,CACnBC,UAAU,CAAIA,UAAW,CACzBU,WAAW,CAAIA,WAAY,CAC3B,CAAC,CACE,CAAC,CACA,CAAC,CAEV,CAEA,cAAe,CAAApB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}